[alias]
  # list aliases
  aliases = !sh -c 'git config -l | grep alias | cut -c 7- | sort'

  # shorthand for commit
  ci = commit
  # amend the currently staged files to the latest commit reusing last commit message
  amend = commit --amend --reuse-message=HEAD
  # work in progress
  wip = commit -am "WIP"

  # checkout
  co = checkout
  # checkout a branch, creating it if necessary
  cob = !sh -c 'git checkout -b $1 2> /dev/null || git checkout $1'

  # list contributors with number of commits
  contrib = shortlog --numbered --summary

  # clean up local repository
  cleanup = !sh -c 'git gc --prune=now && git remote prune origin'

  # cherry pick
  cp = cherry-pick

  # show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

[apply]
  # detect whitespace errors when applying a patch
  whitespace = warn

[branch]
  # let the local branch track the remote branch when branching off a remote branch
  autosetupmerge = true

[color]
  ui = auto
  interactive = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  commit = green bold
  frag = magenta bold
  meta = yellow bold
  new = green bold
  old = red bold
  whitespace = red reverse

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[commit]
  gpgsign = true

[core]
  # use custom gitignore
  excludesfile = ~/.config/git/ignore

  # default editor for commit messages and other inputs
  editor = vim

  # convert CRLF to LF on commit (on a Linux or Mac system)
  autocrlf = input
  safecrlf = true

  # make `git rebase` safer on macos
  # see: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

[credential]
  helper = osxkeychain

[gpg]
  program = /usr/local/bin/gpg

[init]
  # see https://sfconservancy.org/news/2020/jun/23/gitbranchname
  defaultBranch = main

[pull]
  # enabling rebasing
  rebase = true

[push]
  # When push.default is set to 'matching', git will push local branches
  # to the remote branches that already exist with the same name.
  default = matching

[rebase]
  # use --autosquash by default
  autoSquash = true
  # use --autostash when running git pull --rebase and when rebasing interactively
  autoStash = true
  # warn about removed commits in interactive mode
  missingCommitsCheck = warn

[rerere]
  # enabling the recording of resolved conflicts
  enabled = true

[status]
  showUntrackedFiles = all

[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[include]
  path = ~/.config/git/config.local
